if (Boolean.valueOf(rootProject.ext.isBuildModule)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("moduleName", project.getName())
    }
//    generateStubs = true
}
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

        //MultiDex分包方法
        multiDexEnabled true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
    //（ 或文件夹下的源文件 ） 要被编译 ， 哪些源文件要被排除 。
    sourceSets {
        main {
            if (Boolean.valueOf(rootProject.ext.isBuildModule)) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api project(path: ':common-ex-conf')

    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["constraint-layout"]

    //bugly
    api rootProject.ext.dependencies["bugly_crashreport"]
    api rootProject.ext.dependencies["bugly_nativecrashreport"]
    //工具类
    api rootProject.ext.dependencies["utilcode"]
    //rxjava
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    //retrofit网络请求
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["logging-interceptor"]
    //ARouter
    api rootProject.ext.dependencies["arouter"]
    kapt rootProject.ext.dependencies["arouter-compiler"]

}
